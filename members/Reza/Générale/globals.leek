/* ----- FONCTIONS ----- */

function GetMaxRange() {
	var max = 0
	var i = 0
	while (i < count(ARMES))
	{
		if (ARMES[i]["portee_max"] > max) {
			max = ARMES[i]["portee_max"]
		}
		i++
	}
	debug("Max is " + max)
	return max
}
	
function GetMinMaxRange() {
	var min = 99
	var i = 0
	while (i < count(ARMES))
	{
		if (ARMES[i]["portee_max"] < min) {
			min = ARMES[i]["portee_max"]
		}
		i++
	}
	return min
}
	
function GetMinRange() {
	var min = 99
	var i = 0
	while (i < count(ARMES))
	{
		if (ARMES[i]["portee_min"] < min) {
			min = ARMES[i]["portee_min"]
		}
		i++
	}
	return min
}

/* ----- OBJETS ----- */

function nouvelleArme(id, deg_min, deg_max){
    var obj = [
		"type":"arme"
		"id":id
		"deg_min":deg_min
		"deg_max":deg_max
		"portee_min":getWeaponMinRange(id)
		"portee_max":getWeaponMaxRange(id)
		"cout":getWeaponCost(id)
		"dispo":0
		"dispo_max":0
		"efficacite":(deg_min * 1.3) / getWeaponCost(id)  // Pcq les armes ont l'air de faire plus mal
	]
	obj['GET_CELLS_TO_USE'] = function(entity) {
        return getCellsToUseWeapon(obj["id"], entity)
    }
	obj['GET_TOTAL_COST'] = function() {
		if (getWeapon() == obj["id"]) {
			return obj["cout"]
		} else {
			return obj["cout"]+1
		}
    }
    return obj;
}

function nouvellePuce(id, deg_min, deg_max, cooldown){
    var obj = [
		"type":"puce"
		"id":id
		"deg_min":deg_min
		"deg_max":deg_max
		"portee_min":getChipMinRange(id)
		"portee_max":getChipMaxRange(id)
		"cout":getChipCost(id)
		"dispo":cooldown
		"dispo_max":cooldown
		"efficacite":deg_min / getChipCost(id)
	]
	obj['GET_CELLS_TO_USE'] = function(entity) {
        return getCellsToUseChip(obj["id"], entity)
    }
	obj['GET_TOTAL_COST'] = function() {
		return obj["cout"]
    }
    return obj;
}

/* ----- ARMES ----- */

global ARMES = []

if(isEmpty(ARMES)) {
	var X = nouvellePuce(CHIP_ROCK, 35, 36, 1)
	insert(ARMES, X, 0)

	X = nouvelleArme(WEAPON_MAGNUM, 25, 40)
	insert(ARMES, X, 1)

	X = nouvellePuce(CHIP_ICE, 17, 19, 0)
	insert(ARMES, X, 2)

	X = nouvelleArme(WEAPON_BROADSWORD, 39*2, 41*2)  // *2 pcq EPEE
	insert(ARMES, X, 3)

	X = nouvellePuce(CHIP_FLASH, 32, 35, 1)
	insert(ARMES, X, 4)

	X = nouvellePuce(CHIP_PEBBLE, 2, 34, 1)
	insert(ARMES, X, 5)

	X = nouvellePuce(CHIP_FLAME, 25, 27, 0)
	insert(ARMES, X, 5)
}

/* ----- INITIALISATION TOUR 1 ----- */

global enemies = [[], [], []]

if (getTurn() == 1) {
	GET_ENEMIES()
	setRegister("Enemies", jsonEncode(enemies))
	debug("ENEMIES = " + jsonEncode(enemies))
	
	setRegister("MaxRange", GetMaxRange())
	debug("PORTEE_MAX = " + GetMaxRange())
	
	setRegister("MinMaxRange", GetMinMaxRange())
	debug("PORTEE_MINMAX = " + GetMinMaxRange())
	
	// On trie les armes par efficacité
	for (var i = 0; i < count(ARMES); i++) {
		var maxID = i
		var maxEFF = ARMES[i]["efficacite"]
		for (var j = i; j < count(ARMES); j++) {
			if (ARMES[j]["efficacite"] > maxEFF) {
				maxEFF = ARMES[j]["efficacite"]
				maxID = j
			}
		}
		var swouitch = ARMES[i]
		ARMES[i] = ARMES[maxID]
		ARMES[maxID] = swouitch
	}
	
	setRegister("ARMES", jsonEncode(ARMES))
	debug("PORTEE_MINMAX = " + jsonEncode(ARMES))
}

/* ----- VARIABLES ----- */

global self
global enemy
global MaxRange
global MinMaxRange
global cases = []
MinMaxRange = number(getRegister("MinMaxRange"))
MaxRange = number(getRegister("MaxRange"))
global MAX_DEGATS = 50
global HEAL_CHIPS = [CHIP_BANDAGE, CHIP_CURE]
global BUFF_CHIPS = [CHIP_MOTIVATION, CHIP_LEATHER_BOOTS]
global ATTACK_CHIPS = [CHIP_PROTEIN]
global DEFENSE_CHIPS = [CHIP_HELMET, CHIP_WALL]
global PHRASES = [
	["Mort au poireau !!!",
	"A moi la tarte !!!",
	"Soit mon quatre heure !!!",
	"Laisse moi abréger tes souffrance !!!",
	"Une dernière volonté?",
	"Je sens ta faiblesse !!!",
	"T'as déjà perdu la plupart de tes feuilles allez viens !!!",
	"Viens me voir j'en aurais pas pour longtemps !!!"],
	["Petit petit! Viens ici!",
	"Allez viens j'vais pas t'manger ;)",
	"Ro allez quoi viens!",
	"Viens t'battre!",
	"Ramène-toi que j'te transforme en tarte aux poireaux!",
	"Ton heure est venue poto...",
	"T'as peur?"
	"Quand je ne suis pas là ton petit coeur danse mais actuellement je SUIS là."],
	["Je suis trop jeune pour mourir!",
	"Voudriez-vous empêcher une jeune pousse de venir poireau? :(",
	"Oskour! Aled!",
	"Nan mais allez quoi cédez-moi la victoire svp...",
	"Maman j'ai mal...",
	"J'ai pas dit mon dernier mot !",
	"J'ai une dernière volonté: épargne-moi stp :sad_face:...",
	"Tu m'auras pas euh! Nananère euh!"]
]