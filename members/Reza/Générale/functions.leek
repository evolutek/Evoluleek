include("globals")

function ATTACK()
{
	// debug("FEU !")
	if (lineOfSight(getCell(self), getCell(enemy)))
	{
		var TPs = getTP()
		for (var i = 0; i < count(ARMES); i++) {
			if (ARMES[i]["type"] == "arme") {
				if (getWeapon() != ARMES[i]["id"] and
					canUseWeapon(enemy) and
					TPs >= ARMES[i]["cout"]+1 and
					ARMES[i]["dispo"] == ARMES[i]["dispo_max"]) {
					setWeapon(ARMES[i]["id"])
					TPs -= 1
				}
				while (canUseWeapon(enemy) and
					   TPs >= ARMES[i]["cout"] and
					   ARMES[i]["dispo"] == ARMES[i]["dispo_max"]) {
					debug("FEU ARME " + i)
					useWeapon(enemy)
					TPs -= ARMES[i]["cout"]
					ARMES[i]["dispo"] = 0
				}
			} else {
				while (canUseChip(ARMES[i]["id"], enemy) and
					   TPs >= ARMES[i]["cout"] and
					   ARMES[i]["dispo"] == ARMES[i]["dispo_max"]) {
					debug("FEU PUCE " + i)
					useChip(ARMES[i]["id"], enemy)
					TPs -= ARMES[i]["cout"]
					ARMES[i]["dispo"] = 0
				}
			}
		}
	}// else {
	// 	say("J'VOIS RIEN !")
	//}
}

function GO_HIDE()
{
	fill(cases, true, 613) 
	
	// Removing taken spots
	var obstacles = getObstacles()
	for (var i = 0; i < count(obstacles); i++) {
		cases[obstacles[i]] = false
	}

	// Getting hiding spots
	for (var i = 0; i < 613; i++) {
		if (getCellDistance(getCell(enemy), i) <= getMP(enemy)) {
			for (var j = 0; j < 613; j++) {
				if (lineOfSight(i, j) and cases[j]) {
					cases[j] = false
				}
			}
		}
	}

	// Getting the nearest one
	var nearestID = 0
	var nearestDist = 999
	for (var i = 0; i < 613; i++) {
		if (cases[i] and getCellDistance(getCell(), i) < nearestDist) {
			nearestID = i
			nearestDist = getCellDistance(getCell(), i)
		}
	}
	
	return nearestID
}

function GO_ATTACK()
{
	var cells = getCellsToUseChip(CHIP_ICE, enemy)
	removeElement(cells, getCell(enemy))

	// Getting the nearest one
	var nearestID = cells[0]
	var nearestDist = 999
	for (var i = 0; i < count(cells); i++) {
		if (getCellDistance(getCell(), cells[i]) < nearestDist and
		   getCellDistance(getCell(enemy), cells[i]) >= MinMaxRange) {
			nearestID = cells[i]
			nearestDist = getCellDistance(getCell(), cells[i])
		}
	}
	
	return nearestID
}

function GET_ENEMY()
{
	var enemies = getAliveEnemies()
	debug("ENNEMIS " + enemies)
	var enemiesnochest = []
	
	// On vire les coffres
	for (var i = 0; i < count(enemies); i++) {
		if (not contains(getName(enemies[i]), "chest")) {
			insert(enemiesnochest, enemies[i], 0)
		}
	}
	debug("ENNEMIS SANS COFFRES " + enemiesnochest)
	
	// On checke si l'ennemi n'as pas un pseudo de coffre
	if (count(enemiesnochest) > 0) {
		enemies = enemiesnochest
	}
	
	// On prends le plus proche
	var nearestID = enemies[0]
	var nearestDist = 999
	for (var i = 0; i < count(enemies); i++) {
		if (getCellDistance(getCell(), getCell(enemies[0])) < nearestDist) {
			nearestID = enemies[i]
			nearestDist = getCellDistance(getCell(), getCell(enemies[0]))
		}
	}
	
	return nearestID
}